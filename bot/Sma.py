import datetime
from Indicator import *
from utils import *

# Original source: https://github.com/jsmits/ta_python

class Sma(Indicator):
    """ calculates Smooth Moving Average (SMA) indicator class """
   
    def __init__(self, N):
        Indicator.__init__(self, N)
        self.output = []
        self.sum = 0.0

    def append(self, timestamp, value):

        Indicator.append(self,timestamp,value)

        outputvalue = None
        
        if len(self.input) > self.N:
            try:    
                self.sum = self.sum - self.input[(len(self.input)-self.N - 1)] + value
                outputvalue = self.sum / self.N
            except:
                self.input = self.input[:-1]
                raise IndicatorError('error calculating sma value; should never happen here')

        elif len(self.input) == self.N:
            try:    
                self.sum = sum(self.input[(len(self.input)-self.N):len(self.input)])
                outputvalue = self.sum / self.N
            except:
                self.input = self.input[:-1]
                raise IndicatorError('error calculating sma value; should never happen here')

        self.output.append(outputvalue)

        return self.lastOutput()

    def lastOutput(self):
        if len(self.output) > 0:
            return self.output[-1]
        return None

    def popHead(self):
        # remove previous virtual candle
        Indicator.popHead(self)
        self.output = self.output[1:]

    def popTail(self):
        # remove previous virtual candle
        Indicator.popTail(self)
        self.output = self.output[:-1]

        
    def validateN(self, N):
        if type(N) is not int:
            raise IndicatorError('invalid N for initializing Sma instance, should be an integer; input: %s' % (self.N, ))
        if N < 1:
            raise IndicatorError('invalid N for initializing Sma instance, should be an int > 0; input: %s' % (self.N, ))
    
    # override functions
    def __str__(self):
        string = ''
        for i in range(len(self.input)):
            string+='%s\t%s\t%s\t%s\n' % (i+1, timestamp2str(self.times[i]), self.input[i], str(self.output[i])[:9])
        return 'Sma(%s):\n%s' % (self.N, string)
    def __repr__(self):
        return 'Sma(%s)' % self.N
    def __len__(self):
        return len(self.output)
    def __getitem__(self, offset):
        return self.output[offset]
    def __getslice__(self, low, high):
        return self.output[low:high]
    


if __name__=='__main__':
    ind = Sma(6)

    input = [
            {"c": 3698.14000000, "T": 1546300979999, "o": 3699.42000000, "h": 3702.04000000, "l": 3696.08000000, "v": 14.48861500},
            {"c": 3696.51000000, "T": 1546301039999, "o": 3697.49000000, "h": 3698.19000000, "l": 3695.97000000, "v": 8.49996600},
            {"c": 3696.32000000, "T": 1546301099999, "o": 3697.20000000, "h": 3697.62000000, "l": 3695.00000000, "v": 21.78288600},
            {"c": 3695.10000000, "T": 1546301159999, "o": 3696.30000000, "h": 3697.24000000, "l": 3695.01000000, "v": 12.80244600},
            {"c": 3692.19000000, "T": 1546301219999, "o": 3695.16000000, "h": 3695.22000000, "l": 3690.24000000, "v": 16.22817700},
            {"c": 3690.12000000, "T": 1546301279999, "o": 3690.71000000, "h": 3693.60000000, "l": 3689.88000000, "v": 16.41223000},
            {"c": 3691.96000000, "T": 1546301339999, "o": 3691.23000000, "h": 3692.88000000, "l": 3691.23000000, "v": 9.79910000},
            {"c": 3692.34000000, "T": 1546301399999, "o": 3691.99000000, "h": 3693.34000000, "l": 3690.35000000, "v": 7.05462800},
            {"c": 3696.13000000, "T": 1546301459999, "o": 3692.34000000, "h": 3696.78000000, "l": 3692.34000000, "v": 9.43247900},
            {"c": 3696.72000000, "T": 1546301519999, "o": 3695.16000000, "h": 3697.88000000, "l": 3695.14000000, "v": 7.58590200},
            {"c": 3697.83000000, "T": 1546301579999, "o": 3696.72000000, "h": 3697.83000000, "l": 3695.25000000, "v": 6.74820200},
            {"c": 3697.00000000, "T": 1546301639999, "o": 3696.96000000, "h": 3698.93000000, "l": 3695.95000000, "v": 11.73042200},
            {"c": 3697.31000000, "T": 1546301699999, "o": 3698.26000000, "h": 3698.26000000, "l": 3695.31000000, "v": 7.60832800},
            {"c": 3697.01000000, "T": 1546301759999, "o": 3697.91000000, "h": 3698.75000000, "l": 3696.17000000, "v": 7.31585300},
            {"c": 3695.98000000, "T": 1546301819999, "o": 3696.99000000, "h": 3698.46000000, "l": 3695.70000000, "v": 13.56637000},
            {"c": 3695.98000000, "T": 1546301879999, "o": 3695.88000000, "h": 3696.37000000, "l": 3695.34000000, "v": 13.01087100},
            {"c": 3693.81000000, "T": 1546301939999, "o": 3696.43000000, "h": 3696.79000000, "l": 3693.63000000, "v": 6.13056300},
            {"c": 3704.60000000, "T": 1546326179999, "o": 3705.02000000, "h": 3706.12000000, "l": 3703.35000000, "v": 4.17755000},
            {"c": 3705.26000000, "T": 1546326239999, "o": 3704.60000000, "h": 3706.07000000, "l": 3703.34000000, "v": 3.25515800},
            {"c": 3705.71000000, "T": 1546326299999, "o": 3704.55000000, "h": 3706.70000000, "l": 3704.55000000, "v": 4.11324300},
            {"c": 3705.99000000, "T": 1546326359999, "o": 3705.25000000, "h": 3706.70000000, "l": 3704.37000000, "v": 3.45998600},
            {"c": 3705.26000000, "T": 1546326419999, "o": 3704.88000000, "h": 3706.69000000, "l": 3704.66000000, "v": 5.30586600},
            {"c": 3705.86000000, "T": 1546326479999, "o": 3705.92000000, "h": 3706.62000000, "l": 3704.57000000, "v": 5.93924400},
            {"c": 3705.87000000, "T": 1546326539999, "o": 3705.87000000, "h": 3706.37000000, "l": 3704.09000000, "v": 4.08716000},
            {"c": 3707.00000000, "T": 1546326599999, "o": 3704.78000000, "h": 3707.00000000, "l": 3704.78000000, "v": 4.55327900},
            {"c": 3707.13000000, "T": 1546326659999, "o": 3707.00000000, "h": 3708.02000000, "l": 3706.29000000, "v": 5.87671900},
            {"c": 3707.42000000, "T": 1546326719999, "o": 3706.45000000, "h": 3708.02000000, "l": 3706.45000000, "v": 8.49602900},
            {"c": 3705.87000000, "T": 1546326779999, "o": 3707.95000000, "h": 3707.95000000, "l": 3705.87000000, "v": 4.32876300},
            {"c": 3707.50000000, "T": 1546326839999, "o": 3705.01000000, "h": 3707.74000000, "l": 3705.01000000, "v": 5.10889600},
            {"c": 3705.04000000, "T": 1546326899999, "o": 3707.50000000, "h": 3707.74000000, "l": 3705.04000000, "v": 7.56143100},
            {"c": 3717.99000000, "T": 1546326959999, "o": 3705.92000000, "h": 3719.00000000, "l": 3705.73000000, "v": 52.1455890},
            {"c": 3710.31000000, "T": 1546327019999, "o": 3717.99000000, "h": 3726.64000000, "l": 3710.24000000, "v": 81.5230970},
            {"c": 3716.41000000, "T": 1546327079999, "o": 3710.33000000, "h": 3719.64000000, "l": 3710.33000000, "v": 19.8123320},
            {"c": 3710.79000000, "T": 1546327139999, "o": 3716.39000000, "h": 3716.39000000, "l": 3706.81000000, "v": 11.5419530},
            {"c": 3709.25000000, "T": 1546327199999, "o": 3710.17000000, "h": 3711.57000000, "l": 3706.68000000, "v": 4.60211300},
            {"c": 3707.66000000, "T": 1546327259999, "o": 3709.14000000, "h": 3709.14000000, "l": 3705.00000000, "v": 10.1029460},
            {"c": 3706.33000000, "T": 1546327319999, "o": 3705.62000000, "h": 3708.14000000, "l": 3705.62000000, "v": 4.68806900},
            {"c": 7186.68000000, "T": 1577836859999, "o": 7195.24000000, "h": 7196.25000000, "l": 7183.14000000, "v": 51.64281200},
            {"c": 7184.03000000, "T": 1577836919999, "o": 7187.67000000, "h": 7188.06000000, "l": 7182.20000000, "v": 7.24814800},
            {"c": 7182.43000000, "T": 1577836979999, "o": 7184.41000000, "h": 7184.71000000, "l": 7180.26000000, "v": 11.68167700},
            {"c": 7185.94000000, "T": 1577837039999, "o": 7183.83000000, "h": 7188.94000000, "l": 7182.49000000, "v": 10.02539100},
            {"c": 7179.78000000, "T": 1577837099999, "o": 7185.54000000, "h": 7185.54000000, "l": 7178.64000000, "v": 14.91110500},
            {"c": 7179.99000000, "T": 1577837159999, "o": 7179.76000000, "h": 7182.51000000, "l": 7178.20000000, "v": 12.46324300},
            {"c": 7182.00000000, "T": 1577837219999, "o": 7180.00000000, "h": 7182.00000000, "l": 7179.99000000, "v": 3.57377400},
            {"c": 7183.66000000, "T": 1577837279999, "o": 7181.70000000, "h": 7183.77000000, "l": 7180.91000000, "v": 14.47078200},
            {"c": 7187.68000000, "T": 1577837339999, "o": 7183.90000000, "h": 7187.74000000, "l": 7183.45000000, "v": 12.84244300},
            {"c": 7191.07000000, "T": 1577837399999, "o": 7187.68000000, "h": 7191.77000000, "l": 7186.02000000, "v": 16.01498300},
            {"c": 7187.36000000, "T": 1577837459999, "o": 7193.15000000, "h": 7193.53000000, "l": 7186.25000000, "v": 12.60237000},
            {"c": 7188.71000000, "T": 1577837519999, "o": 7187.36000000, "h": 7191.08000000, "l": 7186.82000000, "v": 10.26352500},
            {"c": 7187.02000000, "T": 1577837579999, "o": 7189.52000000, "h": 7189.52000000, "l": 7187.00000000, "v": 2.86041300}, 
            {"c": 7182.08000000, "T": 1577837639999, "o": 7187.02000000, "h": 7187.02000000, "l": 7181.61000000, "v": 13.23039300}, 
            {"c": 7180.97000000, "T": 1577837699999, "o": 7181.60000000, "h": 7182.10000000, "l": 7180.24000000, "v": 9.11180900}, 
            ]

    for i in input:
        ind.appendCandle(i)
    print(ind)
